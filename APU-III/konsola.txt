
> data <- read.csv("cameras2.csv")
> # Rozbij dane na osobne kolumny
> data_split <- data.frame(do.call(rbind, strsplit(as.character(data$names.resolution.rangeSensitivity.price.opinions.customerEvalution.opinion_status), ";")))
> # Przypisz nazwy kolumn
> colnames(data_split) <- c("names", "resolution", "rangeSensitivity", "price", "opinions", "customerEvalution", "opinion_status")
> # Zmień kolumny na odpowiednie typy danych
> data_split$resolution <- as.integer(data_split$resolution)
> data_split$rangeSensitivity <- as.integer(data_split$rangeSensitivity)
> data_split$price <- as.integer(data_split$price)
> data_split$opinions <- as.integer(data_split$opinions)
> data_split$customerEvalution <- as.numeric(data_split$customerEvalution)
> # Dołącz nowe kolumny do oryginalnych danych
> data <- cbind(data, data_split)
> # Utwórz model sztucznej sieci neuronowej
> neural_model <- neuralnet(price ~ resolution + rangeSensitivity + opinions + customerEvalution,
+                           data = data, 
+                           linear.output = TRUE)
> # Przewiduj ceny dla danych wejściowych
> predicted_prices <- predict(neural_model, newdata = data)
> # Oblicz błąd prognoz
> error <- sum((predicted_prices - data$price)^2) / length(data$price)
> # Wyświetl wyniki
> rmse <- sqrt(error)
> # Wyświetl wyniki
> cat("Root Mean Squared Error (RMSE):", rmse, "\n")
Root Mean Squared Error (RMSE): 1308.734 